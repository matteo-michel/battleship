@page "/leaderboard"
@attribute [Authorize]

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using BattleShip.Models.DTO.Output;
@using Grpc.Core;
@inject LeaderBoardService.LeaderBoardServiceClient LeaderBoardClient
@inject HttpClient Http


<link rel="stylesheet" href="css/leaderboard.css">



<div class="leaderboard">

  @if (Leaderboards != null){


  
    <h1>Leaderboard</h1>

    @foreach (var entry in Leaderboards.LeaderBoards){

        <div class="leaderboard-item">
            <div class="leaderboard-item-name">@entry.Name</div>
            <div class="leaderboard-item-score">@entry.Score</div>
        </div>

    }

  }else{
    <p>Loading</p>
  }
</div>

@code{


     protected LeaderBoardList Leaderboards;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Call the GetLeaderBoard gRPC method
            Leaderboards = await LeaderBoardClient.GetLeaderBoardAsync(new Empty());
        }
        catch (RpcException ex)
        {
            // Handle any errors from the gRPC call
            // You can display an error message, log the error, etc.
        }
    }
}
